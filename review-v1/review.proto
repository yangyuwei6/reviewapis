syntax = "proto3";

package api.review.v1;
import "third_party/google/api/annotations.proto";
import "third_party/validate/validate.proto";

option go_package = "review_service/api/review/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.v1";

service Review {
	//c端创建评价
	rpc CreateReview (CreateReviewRequest) returns (CreateReviewReply){
		option(google.api.http) = {
			post: "/v1/review",
			body: "*"
		};
	};
	rpc GetReviewByReviewID (GetReviewRequest) returns (GetReviewReply){
		option(google.api.http) = {
			get: "/v1/review/{reviewID}"
		};
	};
	// O端审核评价
	rpc AuditReview (AuditReviewRequest) returns (AuditReviewReply) {
		option (google.api.http) = {
			post: "/v1/review/audit",
			body: "*"
		};
	}
	// B端回复评价
	rpc ReplyReview (ReplyReviewRequest) returns (ReplyReviewReply) {
		option (google.api.http) = {
			post: "/v1/review/reply",
			body: "*"
		};
	}
	// B端申诉评价
	rpc AppealReview (AppealReviewRequest) returns (AppealReviewReply) {
		option (google.api.http) = {
			post: "/v1/review/appeal",
			body: "*"
		};
	}
	rpc UpdateReview (UpdateReviewRequest) returns (UpdateReviewReply);
	rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewReply);

	rpc ListReview (ListReviewRequest) returns (ListReviewReply);
}

// AppealReviewRequest 申诉评价的请求参数
message AppealReviewRequest{
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 2 [(validate.rules).int64 = {gt: 0}];
	string reason = 3 [(validate.rules).string = {min_len: 2, max_len:200}];
	string content = 4 [(validate.rules).string = {min_len: 2, max_len:200}];
	string picInfo = 5;
	string videoInfo = 6;
}

// 对评价进行申诉的返回值
message AppealReviewReply{
	int64 appealID = 1;
}

// 回复评价的请求
message ReplyReviewRequest{
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 storeID = 2 [(validate.rules).int64 = {gt: 0}];
	string content = 3 [(validate.rules).string = {min_len: 2, max_len:200}];
	string picInfo = 4;
	string videoInfo = 5;
}

// 回复评价的返回值
message ReplyReviewReply{
	int64 replyID = 1;
}


//创建评价参数
message CreateReviewRequest {
	int64 userID=1 [(validate.rules).int64 = {gt: 0}];
	int64 orderID=2 [(validate.rules).int64 = {gt: 0}];;
	int32 score = 3 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 serviceScore = 4 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	int32 expressScore = 5 [(validate.rules).int32 = {in: [1,2,3,4,5]}];
	string content=6 [(validate.rules).string = {min_len: 8,max_len : 255}];
	string picInfo =7;
	string videoInfo=8;
	bool anonymous=9;
}
//创建评价回复
message CreateReviewReply {
	int64 reviewID=1;
}

message UpdateReviewRequest {}
message UpdateReviewReply {}

message DeleteReviewRequest {}
message DeleteReviewReply {}

// 评价信息
message ReviewInfo{
	int64 reviewID = 1;
	int64 userID = 2;
	int64 orderID = 3;
	int32 score = 4;
	int32 serviceScore = 5;
	int32 expressScore = 6;
	string content = 7;
	string picInfo = 8;
	string videoInfo = 9;
	int32 status = 10;
}
message GetReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
}
message GetReviewReply {
	ReviewInfo data=1;
}



message AuditReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 status = 2 [(validate.rules).enum = {defined_only: true}];
	string opUser = 3 [(validate.rules).string = {min_len: 2}];
	string opReason = 4 [(validate.rules).string = {min_len: 2}];
	optional string opRemarks = 5;
}
//这里我们在建表的时候对status几个值进行了定义，所以这里没有用枚举
message AuditReviewReply{
	int64  reviewID=1;
	int32 status=2;
}

message ListReviewRequest {}
message ListReviewReply {}